version: '3.7'

services:
  web:
    build: .
    # entrypoint: /code/docker-entrypoint.sh
    command: python manage.py runserver 0.0.0.0:8000
    environment:
      - LOGLEVEL=INFO
      - DATABASE_URL=db://postgres:postgres@db:5432/postgres
      - REDIS_URL=redis://redis:6379/1
      - CELERY_BROKER_URL=amqp://guest:@amqp:5672/
    volumes:
      - .:/code
    ports:
      - 8000:8000
    depends_on:
      - db
      - amqp
      - redis

  celery_worker:
    build: .
    command: celery -A taskapp.celery:app worker --loglevel=info -c 4
    environment:
      - LOGLEVEL=INFO
      - DATABASE_URL=db://postgres:postgres@db:5432/postgres
      - REDIS_URL=redis://redis:6379/1
      - CELERY_BROKER_URL=amqp://guest:@amqp:5672/
    ports:
      - "8080:9090"
    volumes:
      - .:/code
    depends_on:
      - db
      - amqp
      - redis

  celery_beat:
    build: .
    command: celery -A taskapp.celery:app beat --loglevel=info
    environment:
      - LOGLEVEL=INFO
      - DATABASE_URL=db://postgres:postgres@db:5432/postgres
      - REDIS_URL=redis://redis:6379/1
      - CELERY_BROKER_URL=amqp://guest:@amqp:5672/
    depends_on:
      - celery_worker
      - amqp
      - db

  db:
    image: postgres:14
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - 6055:5432
    environment:
      - "POSTGRES_HOST_AUTH_METHOD=trust"

  amqp:
    image: rabbitmq
    ports:
      - "5672:5672"

  redis:
    image: redis:6.2
    ports:
      - "6349:6379"
    volumes:
      - ./data/redis:/data
    entrypoint: redis-server --appendonly yes
    restart: always

volumes:
  postgres_data:
